{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nconst initialState = [];\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setCart: (state, action) => {\n      console.log(current(state));\n      const example = state.find(item => {\n        if (item.name === action.payload.name) {\n          item.quantity += 1;\n        }\n      });\n\n      if (!example || example.quantity < 2) {\n        state.push(action.payload);\n      } // if(increase) {\n      //     increase.quantity += 1;\n      //     state.push(increase)\n      // } else {\n      //     state.push(action.payload)\n      // }\n      // if(state.includes(action.payload)) {\n      //     const increase = state.find(item => item.name === action.payload.name);\n      //     if(increase) {\n      //         increase.quantity += 1;\n      //     } else {\n      //         console.log('nope');\n      //     }\n      // } else {\n      //     state.push(action.payload)\n      // }\n\n    },\n    updateCart: (state, action) => {\n      return state.filter(item => item.name !== action.payload.name);\n    },\n    clearCart: (state, action) => {\n      return initialState;\n    }\n  }\n});\nexport const {\n  setCart,\n  updateCart,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/joshuasamaniego-evans/Desktop/CPBootcamp/food-delivery-app/food-delivery/src/slices/cartSlice.js"],"names":["createSlice","current","initialState","cartSlice","name","reducers","setCart","state","action","console","log","example","find","item","payload","quantity","push","updateCart","filter","clearCart","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACM,KAAD,CAAnB;AACA,YAAMI,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAI;AAChC,YAAGA,IAAI,CAACT,IAAL,KAAcI,MAAM,CAACM,OAAP,CAAeV,IAAhC,EAAsC;AAClCS,UAAAA,IAAI,CAACE,QAAL,IAAiB,CAAjB;AACH;AACH,OAJe,CAAhB;;AAMA,UAAG,CAACJ,OAAD,IAAYA,OAAO,CAACI,QAAR,GAAmB,CAAlC,EAAqC;AACjCR,QAAAA,KAAK,CAACS,IAAN,CAAWR,MAAM,CAACM,OAAlB;AACH,OAVuB,CAYxB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,KA9BK;AA+BNG,IAAAA,UAAU,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC3B,aAAOD,KAAK,CAACW,MAAN,CAAaL,IAAI,IAAIA,IAAI,CAACT,IAAL,KAAcI,MAAM,CAACM,OAAP,CAAeV,IAAlD,CAAP;AACH,KAjCK;AAkCNe,IAAAA,SAAS,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAC1B,aAAON,YAAP;AACH;AApCK;AAHgB,CAAD,CAA7B;AA2CA,OAAO,MAAM;AAAEI,EAAAA,OAAF;AAAWW,EAAAA,UAAX;AAAuBE,EAAAA;AAAvB,IAAqChB,SAAS,CAACiB,OAArD;AAEP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\n\nconst initialState = []\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        setCart: (state, action) => {\n            console.log(current(state));\n            const example = state.find(item => {\n               if(item.name === action.payload.name) {\n                   item.quantity += 1;\n               }\n            })\n\n            if(!example || example.quantity < 2) {\n                state.push(action.payload)\n            }\n\n            // if(increase) {\n            //     increase.quantity += 1;\n            //     state.push(increase)\n            // } else {\n            //     state.push(action.payload)\n            // }\n        \n            // if(state.includes(action.payload)) {\n            //     const increase = state.find(item => item.name === action.payload.name);\n            //     if(increase) {\n            //         increase.quantity += 1;\n            //     } else {\n            //         console.log('nope');\n            //     }\n            // } else {\n            //     state.push(action.payload)\n            // }\n        },\n        updateCart: (state, action) => {\n            return state.filter(item => item.name !== action.payload.name)\n        },\n        clearCart: (state, action) => {\n            return initialState;\n        }\n    }\n});\n\nexport const { setCart, updateCart, clearCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}