{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = [];\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setCart: (state, action) => {\n      const example = state.find(item => {\n        if (item.name === action.payload.name) {\n          item.quantity += 1;\n        }\n\n        return item.name === action.payload.name;\n      });\n\n      if (!example) {\n        state.push(action.payload);\n      }\n    },\n    updateCart: (state, action) => {\n      return state.filter(item => item.name !== action.payload.name);\n    },\n    clearCart: (state, action) => {\n      return initialState;\n    },\n    getTotal: (state, action) => {}\n  }\n});\nexport const {\n  setCart,\n  updateCart,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/joshuasamaniego-evans/Desktop/CPBootcamp/food-delivery-app/food-delivery/src/slices/cartSlice.js"],"names":["createSlice","initialState","cartSlice","name","reducers","setCart","state","action","example","find","item","payload","quantity","push","updateCart","filter","clearCart","getTotal","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAMC,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAI,IAAI;AAChC,YAAGA,IAAI,CAACP,IAAL,KAAcI,MAAM,CAACI,OAAP,CAAeR,IAAhC,EAAsC;AAClCO,UAAAA,IAAI,CAACE,QAAL,IAAiB,CAAjB;AACH;;AACD,eAAOF,IAAI,CAACP,IAAL,KAAcI,MAAM,CAACI,OAAP,CAAeR,IAApC;AACF,OALe,CAAhB;;AAMA,UAAG,CAACK,OAAJ,EAAa;AACTF,QAAAA,KAAK,CAACO,IAAN,CAAWN,MAAM,CAACI,OAAlB;AACH;AACJ,KAXK;AAYNG,IAAAA,UAAU,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC3B,aAAOD,KAAK,CAACS,MAAN,CAAaL,IAAI,IAAIA,IAAI,CAACP,IAAL,KAAcI,MAAM,CAACI,OAAP,CAAeR,IAAlD,CAAP;AACH,KAdK;AAeNa,IAAAA,SAAS,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC1B,aAAON,YAAP;AACH,KAjBK;AAkBNgB,IAAAA,QAAQ,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB,CAE5B;AApBK;AAHgB,CAAD,CAA7B;AA2BA,OAAO,MAAM;AAAEF,EAAAA,OAAF;AAAWS,EAAAA,UAAX;AAAuBE,EAAAA;AAAvB,IAAqCd,SAAS,CAACgB,OAArD;AAEP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = []\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        setCart: (state, action) => {\n            const example = state.find(item => {\n               if(item.name === action.payload.name) {\n                   item.quantity += 1;\n               }\n               return item.name === action.payload.name;\n            })\n            if(!example) {\n                state.push(action.payload)\n            }\n        },\n        updateCart: (state, action) => {\n            return state.filter(item => item.name !== action.payload.name)\n        },\n        clearCart: (state, action) => {\n            return initialState;\n        },\n        getTotal: (state, action) => {\n            \n        }\n    }\n});\n\nexport const { setCart, updateCart, clearCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}