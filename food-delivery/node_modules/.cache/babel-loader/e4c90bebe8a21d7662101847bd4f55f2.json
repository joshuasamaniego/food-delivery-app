{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nconst initialState = [];\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setCart: (state, action) => {\n      console.log(current(state));\n\n      if (state.includes(action.payload)) {\n        const increase = state.find(item => item.name === action.payload.name);\n\n        if (increase) {\n          increase.quantity += 1;\n        } else {\n          console.log('nope');\n        }\n      } else {\n        state.push(action.payload);\n      }\n    },\n    updateCart: (state, action) => {\n      return state.filter(item => item.name !== action.payload.name);\n    },\n    clearCart: (state, action) => {\n      return initialState;\n    }\n  }\n});\nexport const {\n  setCart,\n  updateCart,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/joshuasamaniego-evans/Desktop/CPBootcamp/food-delivery-app/food-delivery/src/slices/cartSlice.js"],"names":["createSlice","current","initialState","cartSlice","name","reducers","setCart","state","action","console","log","includes","payload","increase","find","item","quantity","push","updateCart","filter","clearCart","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACM,KAAD,CAAnB;;AACA,UAAGA,KAAK,CAACI,QAAN,CAAeH,MAAM,CAACI,OAAtB,CAAH,EAAmC;AAC/B,cAAMC,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACX,IAAL,KAAcI,MAAM,CAACI,OAAP,CAAeR,IAAhD,CAAjB;;AACA,YAAGS,QAAH,EAAa;AACTA,UAAAA,QAAQ,CAACG,QAAT,IAAqB,CAArB;AACH,SAFD,MAEO;AACHP,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACJ,OAPD,MAOO;AACHH,QAAAA,KAAK,CAACU,IAAN,CAAWT,MAAM,CAACI,OAAlB;AACH;AACJ,KAbK;AAcNM,IAAAA,UAAU,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC3B,aAAOD,KAAK,CAACY,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACX,IAAL,KAAcI,MAAM,CAACI,OAAP,CAAeR,IAAlD,CAAP;AACH,KAhBK;AAiBNgB,IAAAA,SAAS,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAC1B,aAAON,YAAP;AACH;AAnBK;AAHgB,CAAD,CAA7B;AA0BA,OAAO,MAAM;AAAEI,EAAAA,OAAF;AAAWY,EAAAA,UAAX;AAAuBE,EAAAA;AAAvB,IAAqCjB,SAAS,CAACkB,OAArD;AAEP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\n\nconst initialState = []\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        setCart: (state, action) => {\n            console.log(current(state));\n            if(state.includes(action.payload)) {\n                const increase = state.find(item => item.name === action.payload.name);\n                if(increase) {\n                    increase.quantity += 1;\n                } else {\n                    console.log('nope');\n                }\n            } else {\n                state.push(action.payload)\n            }\n        },\n        updateCart: (state, action) => {\n            return state.filter(item => item.name !== action.payload.name)\n        },\n        clearCart: (state, action) => {\n            return initialState;\n        }\n    }\n});\n\nexport const { setCart, updateCart, clearCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}